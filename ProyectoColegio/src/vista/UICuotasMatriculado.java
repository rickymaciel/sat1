/*
 * UICuotasMatriculado.java
 *
 * Created on 11 de enero de 2008, 11:37
 */

package vista;

import Datos.Alta;
import controlador.CListar;
import controlador.CUltimo;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import negocios.Configuracion;
import negocios.DetallePago;
import negocios.EncabezadoPago;
import negocios.Matriculado;
import negocios.Producto;
import reportes.cExport_thread;

/**
 *
 * @author  Administrador
 */
public class UICuotasMatriculado extends javax.swing.JFrame
{
    
    /** Creates new form UICuotasMatriculado */
    public UICuotasMatriculado()
    {
        initComponents();
        // Codigo necesario para centrar la ventana
                Dimension pantalla, cuadro;
		pantalla = Toolkit.getDefaultToolkit().getScreenSize();
		cuadro = this.getSize();
		this.setLocation(((pantalla.width - cuadro.width)/2), (pantalla.height - cuadro.height)/2);
        //Fin del centrado
        this.borrarGrilla();
                             
     }
    
    
    public UICuotasMatriculado(String matricula)
    {
        initComponents();
        // Codigo necesario para centrar la ventana
                Dimension pantalla, cuadro;
		pantalla = Toolkit.getDefaultToolkit().getScreenSize();
		cuadro = this.getSize();
		this.setLocation(((pantalla.width - cuadro.width)/2), (pantalla.height - cuadro.height)/2);
        //Fin del centrado
              
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jComboBox1 = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTUltimaFecha = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTCantidadCuotas = new javax.swing.JTextField();
        jBPasarAbajo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jBPagar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jTTotalaPagar = new javax.swing.JTextField();
        jBNuevo = new javax.swing.JButton();
        jBSalir = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        JTMatricula = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTNombres = new javax.swing.JTextField();
        jTApellido = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTDni = new javax.swing.JTextField();
        jTHabilitado = new javax.swing.JTextField();
        jBHistorial = new javax.swing.JButton();
        jBImprimir = new javax.swing.JButton();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Estado de cuenta");
        setResizable(false);
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Cuotas"));
        jLabel6.setBackground(new java.awt.Color(255, 255, 204));
        jLabel6.setText("Ultima Cuota Pagada:");
        jLabel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel6.setOpaque(true);

        jTUltimaFecha.setEditable(false);
        jTUltimaFecha.setFont(new java.awt.Font("Tahoma", 1, 12));
        jTUltimaFecha.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jLabel7.setBackground(new java.awt.Color(255, 255, 204));
        jLabel7.setText("Cuotas a Pagar:");
        jLabel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel7.setOpaque(true);

        jTCantidadCuotas.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTCantidadCuotas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTCantidadCuotasKeyPressed(evt);
            }
        });

        jBPasarAbajo.setText("Pasar Abajo");
        jBPasarAbajo.setEnabled(false);
        jBPasarAbajo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBPasarAbajoMouseClicked(evt);
            }
        });
        jBPasarAbajo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPasarAbajoActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Año", "Mes", "Monto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jBPagar.setText("Pagar");
        jBPagar.setEnabled(false);
        jBPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPagarActionPerformed(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(255, 255, 204));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel8.setText("Total a Pagar:");
        jLabel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel8.setOpaque(true);

        jTTotalaPagar.setEditable(false);
        jTTotalaPagar.setFont(new java.awt.Font("Tahoma", 1, 12));
        jTTotalaPagar.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTUltimaFecha, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                    .addComponent(jTCantidadCuotas, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(15, 15, 15)
                .addComponent(jBPasarAbajo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTTotalaPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTUltimaFecha)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTCantidadCuotas, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBPasarAbajo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBPagar)
                    .addComponent(jTTotalaPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jBNuevo.setText("Nuevo");
        jBNuevo.setEnabled(false);
        jBNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNuevoActionPerformed(evt);
            }
        });

        jBSalir.setText("Salir");
        jBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(" Datos de T\u00e9cnico"));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/binoculars.gif")));
        jButton1.setToolTipText("Buscar Matriculado");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        JTMatricula.setToolTipText("Ingrese en numero de matricula");
        JTMatricula.setMaximumSize(new java.awt.Dimension(2, 4));
        JTMatricula.setMinimumSize(new java.awt.Dimension(2, 4));
        JTMatricula.setName("");
        JTMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTMatriculaActionPerformed(evt);
            }
        });
        JTMatricula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JTMatriculaKeyPressed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 204));
        jLabel1.setText("Numero de Matricula: ");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel1.setOpaque(true);

        jTNombres.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTNombres.setEnabled(false);

        jTApellido.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTApellido.setEnabled(false);

        jLabel2.setBackground(new java.awt.Color(255, 255, 204));
        jLabel2.setText("Apellido:");
        jLabel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel2.setOpaque(true);

        jLabel3.setBackground(new java.awt.Color(255, 255, 204));
        jLabel3.setText("Nombres:");
        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel3.setOpaque(true);

        jLabel4.setBackground(new java.awt.Color(255, 255, 204));
        jLabel4.setText("D.N.I.:");
        jLabel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel4.setOpaque(true);

        jLabel5.setBackground(new java.awt.Color(255, 255, 204));
        jLabel5.setText("Habilitado");
        jLabel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel5.setOpaque(true);

        jTDni.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTDni.setEnabled(false);
        jTDni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTDniActionPerformed(evt);
            }
        });

        jTHabilitado.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTHabilitado.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JTMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTHabilitado)
                            .addComponent(jTDni)
                            .addComponent(jTNombres)
                            .addComponent(jTApellido, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE))
                        .addGap(553, 553, 553))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JTMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTDni, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTApellido, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTHabilitado, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(134, Short.MAX_VALUE))
        );

        jBHistorial.setText("Historial");
        jBHistorial.setEnabled(false);
        jBHistorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBHistorialActionPerformed(evt);
            }
        });

        jBImprimir.setText("Imprimir");
        jBImprimir.setEnabled(false);
        jBImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jBImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBHistorial, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, 0, 479, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBHistorial, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBImprimirActionPerformed
// TODO add your handling code here:
        cExport_thread imprime=new cExport_thread(36,String.valueOf(this.encp.getIdencabezado()).trim());
        imprime.start();
    }//GEN-LAST:event_jBImprimirActionPerformed

    private void jBHistorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBHistorialActionPerformed
// TODO add your handling code here:
        if (this.JTMatricula.getText().trim().length()>0){
            cExport_thread imprime=new cExport_thread(35,this.JTMatricula.getText().trim());
            imprime.start();
        }else{
            JOptionPane.showMessageDialog(null,"Debe ingresar un numero de matricula valido\n para mostrar su historial de pago","Atencion",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jBHistorialActionPerformed

    private void jTCantidadCuotasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTCantidadCuotasKeyPressed
        char c = evt.getKeyChar();
        if (!((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) ||(c == KeyEvent.VK_ENTER) ||(c == KeyEvent.VK_DELETE)  ||(c == KeyEvent.VK_ESCAPE))))
        {    
            getToolkit().beep();
            JOptionPane.showMessageDialog(null,"Debe introducir un valor entero valido ej: 5","Atencion",JOptionPane.ERROR_MESSAGE);
            this.jTCantidadCuotas.setText("");
            this.jTCantidadCuotas.requestFocus();
            evt.consume();
        }
        if(evt.getKeyCode() == 10 && this.jTCantidadCuotas.getText().length()>0)
        {
            int cantidad = Integer.parseInt(this.jTCantidadCuotas.getText().trim());
            if(cantidad > 0 && cantidad<25)
            {
                this.borrarGrilla();
                this.cuotasAPagar();
                this.jTTotalaPagar.setText(String.valueOf(this.calcularTotal()));
                this.jBPagar.setEnabled(true);
                this.jBPagar.requestFocus();
            }else{
                JOptionPane.showMessageDialog(this,"Debe ingresar un numero de cuotas igual o menor a 24","Atencion",JOptionPane.ERROR_MESSAGE);
                this.borrarGrilla();//-----------------
                this.jTCantidadCuotas.setText("");
                this.jTCantidadCuotas.requestFocus();
            }
        }
    }//GEN-LAST:event_jTCantidadCuotasKeyPressed

    private void jBPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPagarActionPerformed
        int resp = JOptionPane.showConfirmDialog(this,"Esta seguro que desea realizar esta operacion","Atencion",JOptionPane.YES_NO_OPTION);
        if(resp == 0){
            if (this.jTCantidadCuotas.getText().length()>0){
                this.guardarDatos();        
                this.jBNuevo.setEnabled(true);
                this.bloquearInterfaz();
            }else{
                JOptionPane.showMessageDialog(this,"Debe figurar el numero de meses a pagar en el campo -Cuotas a Pagar-","No se puede hacer el pago", JOptionPane.INFORMATION_MESSAGE);
                this.borrarGrilla();
            }
        }
    }//GEN-LAST:event_jBPagarActionPerformed

    private void jBSalirActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jBSalirActionPerformed
    {//GEN-HEADEREND:event_jBSalirActionPerformed
// TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jBSalirActionPerformed

    private void JTMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTMatriculaActionPerformed
       
    }//GEN-LAST:event_JTMatriculaActionPerformed

    private void jTDniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTDniActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jTDniActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void jBPasarAbajoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBPasarAbajoMouseClicked
        
    }//GEN-LAST:event_jBPasarAbajoMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        boolean resp = this.buscarMatriculado();
        if (resp) this.jTCantidadCuotas.requestFocus();
        //else JOptionPane.showMessageDialog(null,"El matriculado no tiene cuotas pagdas","Atencion",JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void JTMatriculaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTMatriculaKeyPressed
        char c = evt.getKeyChar();
        if (!((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) ||(c == KeyEvent.VK_ENTER) ||(c == KeyEvent.VK_DELETE)  ||(c == KeyEvent.VK_ESCAPE))))
        {    
            getToolkit().beep();
            JOptionPane.showMessageDialog(null,"Debe introducir un valor valido ej: 12","Atencion",JOptionPane.ERROR_MESSAGE);
            this.JTMatricula.setText("");
            this.JTMatricula.requestFocus();
            evt.consume();
        }
        if(evt.getKeyCode() == 10)
        {
            boolean resp = this.buscarMatriculado();
            if (resp) this.jTCantidadCuotas.requestFocus();
            else JOptionPane.showMessageDialog(null,"El matriculado no tiene cuotas pagdas","Atencion",JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_JTMatriculaKeyPressed

    private void jBPasarAbajoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPasarAbajoActionPerformed
        
        this.borrarGrilla();//-----------------
        int cantidad = Integer.parseInt(this.jTCantidadCuotas.getText().trim());
        if(cantidad > 0 && cantidad<25)
        {
            this.borrarGrilla();
            this.cuotasAPagar();
            this.jTTotalaPagar.setText(String.valueOf(this.calcularTotal()));
            this.jBPagar.setEnabled(true);
            this.jBPagar.requestFocus();
        }else{
            JOptionPane.showMessageDialog(null,"Debe ingresar un numero de cuotas igual o menor a 24","Atencion",JOptionPane.ERROR_MESSAGE);
            this.jTCantidadCuotas.setText("");
            this.jTCantidadCuotas.requestFocus();
        }
    }//GEN-LAST:event_jBPasarAbajoActionPerformed

    private void jBNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNuevoActionPerformed
        this.activarInterfaz();
        this.borrarDatos();
        this.JTMatricula.requestFocus();
    }//GEN-LAST:event_jBNuevoActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new UICuotasMatriculado().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JTMatricula;
    private javax.swing.JButton jBHistorial;
    private javax.swing.JButton jBImprimir;
    private javax.swing.JButton jBNuevo;
    private javax.swing.JButton jBPagar;
    private javax.swing.JButton jBPasarAbajo;
    private javax.swing.JButton jBSalir;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTApellido;
    private javax.swing.JTextField jTCantidadCuotas;
    private javax.swing.JTextField jTDni;
    private javax.swing.JTextField jTHabilitado;
    private javax.swing.JTextField jTNombres;
    private javax.swing.JTextField jTTotalaPagar;
    private javax.swing.JTextField jTUltimaFecha;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
   
    Matriculado mat = new Matriculado();
    Date ultimafecha = new Date();
    EncabezadoPago encp = new EncabezadoPago();
    boolean nuevo = false;
    
    public boolean buscarMatriculado()
    {       
        CListar listar = new CListar();
        int matricula = Integer.parseInt(this.JTMatricula.getText().trim());
        mat.setMatricula(matricula);
        mat = listar.parcialxMatriculado(mat);
        boolean resp = false;
        if(mat.getIdmatriculado() != 0)
        {
            this.mostrarDatos(mat);
            this.buscarUltimoPago();
            System.out.println("fehca de inscripcion :"+mat.getFechaInscripcion());
            this.jBPasarAbajo.setEnabled(true);
            this.jBImprimir.setEnabled(true);
            this.jBHistorial.setEnabled(true);
            resp = true;
        }else{
            JOptionPane.showMessageDialog(null,"No existe el Matriculado","Atencion",JOptionPane.ERROR_MESSAGE);
            this.JTMatricula.setText("");
            this.JTMatricula.requestFocus();
        }
        listar = null;
        return resp;
    }
    
    public void mostrarDatos(Matriculado mat)
    {
        this.jTDni.setText(mat.getDni());
        this.jTApellido.setText(mat.getApellido());
        this.jTNombres.setText(mat.getNombres());
        this.jTHabilitado.setText(mat.getHabilitado());
    }
    
    public void buscarUltimoPago()
    {
        CListar listar = new CListar();
        ultimafecha = listar.ultimaFechaEncabezadoPago(mat.getIdmatriculado());
        if(ultimafecha != null)
        {
            Calendar cal = Calendar.getInstance();
            cal.setTime(ultimafecha);
            this.jTUltimaFecha.setText((cal.get(Calendar.MONTH)+1)+"/"+cal.get(Calendar.YEAR));
        }else{
            JOptionPane.showMessageDialog(null,"El matriculado no tiene cuotas pagadas","Atencion",JOptionPane.ERROR_MESSAGE);
            Calendar cal = Calendar.getInstance();
            cal.setTime(mat.getFechaInscripcion());
            System.out.println("fehca de inscripcion :"+mat.getFechaInscripcion());
            ultimafecha = mat.getFechaInscripcion();
            this.jTUltimaFecha.setText((cal.get(Calendar.MONTH)+1)+"/"+cal.get(Calendar.YEAR));
            cal = null;
            nuevo = true;
        }
        listar = null;
    }
    
    public void cuotasAPagar()
    {
        int cantidad = Integer.parseInt(this.jTCantidadCuotas.getText().trim());
        System.out.println("cantidad de cuotas a pagar :"+cantidad);
        GregorianCalendar gc = new GregorianCalendar();
        gc.setTime(ultimafecha);
        DateFormat df = DateFormat.getDateInstance();
        System.out.println(df.format(ultimafecha));
        System.out.println("año :"+gc.get(Calendar.YEAR));
        System.out.println("mes :"+gc.get(Calendar.MONTH));
        int ultimoanio = gc.get(Calendar.YEAR);
        int ultimomes = gc.get(Calendar.MONTH)+1;
        this.llenarGrilla(ultimomes,cantidad,ultimoanio);
    }
    
    public double traerConfiguracion()
    {
         Configuracion conf = new Configuracion();
         CListar listar = new CListar();
         conf = listar.hacerListado(conf);
         Producto producto = listar.obtenerProducto(conf.getIdproducto());
         double cuota = producto.getPrecio();
         conf = null;
         listar = null;
         producto = null;
         return cuota;
    }
    
    public void llenarGrilla(int ultimomes, int cantidad,int anio)
    {
        Double cuota = this.traerConfiguracion(); 
        GregorianCalendar gc = new GregorianCalendar();
        int aux = ultimomes+1;
        if(nuevo)
        {
            aux = ultimomes;
            for(int i = 1; i<=cantidad  ;i++)
            {
                DetallePago dp = new DetallePago();
                if((aux) == 13){
                    aux = 1;
                    anio =anio + 1;
                }
                dp.setAnio(anio);
                dp.setMes(aux);
                dp.setImporte(cuota);
                this.ponerElementoGrilla(dp);
                aux=aux+1;
            }
        }else{
        for(int i = 1; i<=cantidad  ;i++)
        {
            DetallePago dp = new DetallePago();
            if((aux) == 13){
                aux = 1;
                anio =anio + 1;
            }
            dp.setAnio(anio);
            dp.setMes(aux);
            dp.setImporte(cuota);
            this.ponerElementoGrilla(dp);
            aux=aux+1;
        }
        gc = null;
        }
    }
        
    public void ponerElementoGrilla(DetallePago dp)
    {        
        String datos[]= new String[3];
        //NumberFormat nf = NumberFormat.getCurrencyInstance();
        DefaultTableModel modelo = (DefaultTableModel)this.jTable1.getModel();             
        datos[0] = String.valueOf(dp.getAnio());
        datos[1] = String.valueOf(dp.getMes());
        datos[2] = String.valueOf(dp.getImporte());
        modelo.addRow(datos);
    }
    
    public void borrarGrilla()
    {
        DefaultTableModel modelo = (DefaultTableModel)this.jTable1.getModel();
        while(this.jTable1.getRowCount() != 0)
                modelo.removeRow(0);
    }
    
    public double calcularTotal()
    {
        return (this.traerConfiguracion() * Integer.parseInt(this.jTCantidadCuotas.getText().trim()));
    }
    
    //cargo el encabezado correspondiente al matriculado
    public void cargarEncabezado()
    {  
       CUltimo ultimo = new CUltimo();
       encp.setIdmatriculado(mat.getIdmatriculado()); 
       encp.setIdencabezado(ultimo.getUltimoTablaEnc(encp));
       encp.setTotal(this.calcularTotal());
       GregorianCalendar gc = new GregorianCalendar();
       Date fecha2 = (new GregorianCalendar(gc.get(Calendar.YEAR),gc.get(Calendar.MONTH),gc.get(Calendar.DAY_OF_MONTH),gc.get(Calendar.HOUR_OF_DAY),gc.get(Calendar.MINUTE),gc.get(Calendar.SECOND))).getTime();
       encp.setFechapago(fecha2);
       encp.setHabilitacionhasta(this.calcularFecha());
       //encp.setSeriefactura(Long.parseLong(this.jTSerieFactura.getText()));
       //encp.setNrofactura(Long.parseLong(this.jTNroFactura.getText()));
       System.out.println("fecha hasta :"+encp.getHabilitacionhasta());
       encp.setMatricula(Long.parseLong(String.valueOf(mat.getMatricula())));
    }
    
    public Date calcularFecha()
    {
        int cantidad = Integer.parseInt(this.jTCantidadCuotas.getText().trim());
        if(nuevo) cantidad = cantidad - 1;
        Date resp = new Date();
        Calendar cal = Calendar.getInstance();
        cal.setTime(ultimafecha);
        cal.add(Calendar.MONTH,cantidad);
        resp = cal.getTime();
        return resp;
    }
    
    public void insertarMesesAPagar()
    {
        DefaultTableModel modelo = (DefaultTableModel)this.jTable1.getModel(); 
        Configuracion conf = new Configuracion();
        CListar listar = new CListar();
        conf = listar.hacerListado(conf);
        Alta alta = new Alta();
        boolean guardoBien = false;
        int resp = 0;
        for(int fila=0;fila<this.jTable1.getRowCount();fila++){
            resp = this.guardarDetalle(fila,conf,alta);
            if (resp == 0){
                guardoBien=true;
                //MENSAJE
            }else{
                guardoBien=false;
        	//MENSAJE
            }
        }
        conf = null;
        listar = null;
        alta = null;
        //return resp;
    }
    
    private int guardarDetalle(int fil,Configuracion conf, Alta alta){
         //Asigna a la collection de Detalles los valores
        DetallePago detalle=new DetallePago();            
        detalle.setIdencabezadopago(encp.getIdencabezado());
        detalle.setAnio(Integer.parseInt(String.valueOf(this.jTable1.getValueAt(fil,0)).trim()));
        detalle.setMes(Integer.parseInt(String.valueOf(this.jTable1.getValueAt(fil,1)).trim()));
        Double cuota = Double.parseDouble(String.valueOf(this.jTable1.getValueAt(fil,2)).trim());
        detalle.setImporte(cuota);
        detalle.setIdproducto(conf.getIdproducto());
        int respuesta = alta.almacenar(detalle);
        //return respuesta;
        return respuesta;
    }    
    
    public void guardarDatos()
    {
        Alta alta = new Alta();
        this.cargarEncabezado();
        this.insertarMesesAPagar();
        int resp = alta.almacenar(encp);
    }
    
  private void bloquearInterfaz()
  {
      this.JTMatricula.setEnabled(false);
      this.jButton1.setEnabled(false);
      this.jTCantidadCuotas.setEditable(false);
      this.jBPasarAbajo.setEnabled(false);
      this.jBPagar.setEnabled(false);
  }
   
  private void activarInterfaz()
  {
      this.JTMatricula.setEnabled(true);
      this.jTCantidadCuotas.setEditable(true);
      this.jButton1.setEnabled(true);
  }
  
  public void borrarDatos()
  {
      this.JTMatricula.setText("");
      this.jTDni.setText("");
      this.jTApellido.setText("");
      this.jTNombres.setText("");
      this.jTHabilitado.setText("");
      this.jTCantidadCuotas.setText("");
      this.borrarGrilla();
      this.jTUltimaFecha.setText("");
      this.jTTotalaPagar.setText("");
  }
}
