/*
 * UICuotasMatriculado.java
 *
 * Created on 11 de enero de 2008, 11:37
 */

package vista;

import Datos.Modificacion;
import controlador.CAlta;
import controlador.CFacturacion;
import controlador.CListar;
import controlador.CUltimo;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import negocios.Configuracion;
import negocios.DetallePago;
import negocios.EncabezadoPago;
import negocios.Matriculado;
import negocios.Producto;
import reportes.cExport_thread;


/**
 *
 * @author  Administrador
 */
public class UICuotasMatriculado1 extends javax.swing.JFrame
{
    
    /** Creates new form UICuotasMatriculado */
    public UICuotasMatriculado1()
    {
        initComponents();
        // Codigo necesario para centrar la ventana
                Dimension pantalla, cuadro;
		pantalla = Toolkit.getDefaultToolkit().getScreenSize();
		cuadro = this.getSize();
		this.setLocation(((pantalla.width - cuadro.width)/2), (pantalla.height - cuadro.height)/2);
        //Fin del centrado
                this.borrarGrilla2();
                this.cargarCombosFecha();
   }
    
    
    public UICuotasMatriculado1(String matricula)
    {
        initComponents();
        // Codigo necesario para centrar la ventana
                Dimension pantalla, cuadro;
		pantalla = Toolkit.getDefaultToolkit().getScreenSize();
		cuadro = this.getSize();
		this.setLocation(((pantalla.width - cuadro.width)/2), (pantalla.height - cuadro.height)/2);
        //Fin del centrado
              
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jBQuitar = new javax.swing.JButton();
        jCAnio = new javax.swing.JComboBox();
        jBPasar = new javax.swing.JButton();
        jCMes = new javax.swing.JComboBox();
        jTMonto = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTSerieFactura = new javax.swing.JTextField();
        jTNroFactura = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTDia = new javax.swing.JTextField();
        jTMes = new javax.swing.JTextField();
        jTAnio = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel14 = new javax.swing.JLabel();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jBPagar = new javax.swing.JButton();
        jBNuevo = new javax.swing.JButton();
        jBSalir = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        JTMatricula = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTNombres = new javax.swing.JTextField();
        jTApellido = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTDni = new javax.swing.JTextField();
        jTHabilitado = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pago Manual de Cuotas de Matriculado");
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Cuotas"));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Cuotas a Pagar"));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Año", "Mes", "Monto", "Codigo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable3);

        jBQuitar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/remove.gif"))); // NOI18N
        jBQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBQuitarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBQuitar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBQuitar, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
        );

        jCAnio.setEditable(true);
        jCAnio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCAnioKeyPressed(evt);
            }
        });

        jBPasar.setText("Asignar");
        jBPasar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBPasarMouseClicked(evt);
            }
        });
        jBPasar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPasarActionPerformed(evt);
            }
        });
        jBPasar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jBPasarKeyPressed(evt);
            }
        });

        jCMes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ENERO", "FEBRERO", "MARZO", "ABRIL", "MAYO", "JUNIO", "JULIO", "AGOSTO", "SEPTIEMBRE", "OCTUBRE", "NOVIEMBRE", "DICIEMBRE" }));
        jCMes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCMesKeyPressed(evt);
            }
        });

        jTMonto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTMontoKeyPressed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(255, 255, 204));
        jLabel6.setText("Monto:");
        jLabel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel6.setOpaque(true);

        jTSerieFactura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTSerieFacturaKeyPressed(evt);
            }
        });

        jTNroFactura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTNroFacturaKeyPressed(evt);
            }
        });

        jLabel7.setBackground(new java.awt.Color(255, 255, 204));
        jLabel7.setText("Serie:");
        jLabel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel7.setOpaque(true);

        jTDia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTDiaFocusLost(evt);
            }
        });
        jTDia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTDiaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTDiaKeyReleased(evt);
            }
        });

        jTMes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTMesFocusLost(evt);
            }
        });
        jTMes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTMesKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTMesKeyReleased(evt);
            }
        });

        jTAnio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTAnioActionPerformed(evt);
            }
        });
        jTAnio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTAnioFocusLost(evt);
            }
        });
        jTAnio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTAnioKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTAnioKeyReleased(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(255, 255, 204));
        jLabel8.setText("Dia:");
        jLabel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel8.setOpaque(true);

        jLabel9.setBackground(new java.awt.Color(255, 255, 204));
        jLabel9.setText("Mes:");
        jLabel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel9.setOpaque(true);

        jLabel10.setBackground(new java.awt.Color(255, 255, 204));
        jLabel10.setText("Año:");
        jLabel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel10.setOpaque(true);

        jLabel11.setBackground(new java.awt.Color(255, 255, 204));
        jLabel11.setText("FECHA DE PAGO:");
        jLabel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel11.setOpaque(true);

        jLabel12.setBackground(new java.awt.Color(255, 255, 204));
        jLabel12.setText("Numero:");
        jLabel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel12.setOpaque(true);

        jLabel13.setBackground(new java.awt.Color(255, 255, 204));
        jLabel13.setText("FACTURA:");
        jLabel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel13.setOpaque(true);

        jLabel14.setBackground(new java.awt.Color(255, 255, 204));
        jLabel14.setText("CUOTA:");
        jLabel14.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel14.setOpaque(true);

        buttonGroup1.add(jRadioButton4);
        jRadioButton4.setText("Reinscripción 2da vez");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("Reinscripción");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Pago de Matricula");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Inscripción");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTDia, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTMes, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTSerieFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTNroFactura)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jRadioButton1)
                                            .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(98, 98, 98)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jRadioButton4)
                                            .addComponent(jRadioButton3)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jCAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jCMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jBPasar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(81, 81, 81)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12)
                    .addComponent(jTSerieFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTNroFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jTAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jTDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBPasar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jRadioButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
        );

        jBPagar.setLabel("Guardar");
        jBPagar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBPagarMouseClicked(evt);
            }
        });
        jBPagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPagarActionPerformed(evt);
            }
        });

        jBNuevo.setText("Nuevo");
        jBNuevo.setEnabled(false);
        jBNuevo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBNuevoMouseClicked(evt);
            }
        });
        jBNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNuevoActionPerformed(evt);
            }
        });

        jBSalir.setText("Salir");
        jBSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalirActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(" Datos de Técnico"));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/binoculars.gif"))); // NOI18N
        jButton1.setToolTipText("Buscar Matriculado");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        JTMatricula.setToolTipText("Ingrese en numero de matricula");
        JTMatricula.setName(""); // NOI18N
        JTMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JTMatriculaActionPerformed(evt);
            }
        });
        JTMatricula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                JTMatriculaKeyPressed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 204));
        jLabel1.setText("Matricula:");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel1.setOpaque(true);

        jTNombres.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTNombres.setEnabled(false);

        jTApellido.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTApellido.setEnabled(false);

        jLabel2.setBackground(new java.awt.Color(255, 255, 204));
        jLabel2.setText("Apellido:");
        jLabel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel2.setOpaque(true);

        jLabel3.setBackground(new java.awt.Color(255, 255, 204));
        jLabel3.setText("Nombres:");
        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel3.setOpaque(true);

        jLabel4.setBackground(new java.awt.Color(255, 255, 204));
        jLabel4.setText("D.N.I.:");
        jLabel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel4.setOpaque(true);

        jLabel5.setBackground(new java.awt.Color(255, 255, 204));
        jLabel5.setText("Habilitado");
        jLabel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel5.setOpaque(true);

        jTDni.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTDni.setEnabled(false);
        jTDni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTDniActionPerformed(evt);
            }
        });

        jTHabilitado.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTHabilitado.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(JTMatricula, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(116, 116, 116))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTDni, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                            .addComponent(jTApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTHabilitado, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTNombres, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JTMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jTDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTHabilitado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jTApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jButton2.setText("Listado");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, 0, 528, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBSalir, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNuevoActionPerformed
       this.habilitarPantalla();
       this.limpiarDatos2();
       this.mostrarDatos();
    }//GEN-LAST:event_jBNuevoActionPerformed

    private void jBSalirActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jBSalirActionPerformed
    {//GEN-HEADEREND:event_jBSalirActionPerformed
// TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jBSalirActionPerformed

    private void JTMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JTMatriculaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JTMatriculaActionPerformed

    private void jTDniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTDniActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jTDniActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        if(this.JTMatricula.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Debe introducir una matricula para realizar la busqueda","Atencion",JOptionPane.ERROR_MESSAGE);
        }else{
           this.buscarMatriculado();
           this.mostrarDatos();
        }
        this.jTSerieFactura.requestFocus();
    }//GEN-LAST:event_jButton1MouseClicked

    private void jBPasarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBPasarMouseClicked
       
    }//GEN-LAST:event_jBPasarMouseClicked

    private void jBPagarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBPagarMouseClicked
      
    }//GEN-LAST:event_jBPagarMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void JTMatriculaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_JTMatriculaKeyPressed
        char c = evt.getKeyChar();
        if (!((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) ||(c == KeyEvent.VK_ENTER) ||(c == KeyEvent.VK_DELETE)  ||(c == KeyEvent.VK_ESCAPE))))
        {    
            getToolkit().beep();
            JOptionPane.showMessageDialog(null,"Debe introducir un valor valido ej: 12","Atencion",JOptionPane.ERROR_MESSAGE);
            this.JTMatricula.setText("");
            this.JTMatricula.requestFocus();
            evt.consume();
        }
        if(evt.getKeyCode() == 10)
        {
            this.buscarMatriculado();
            this.mostrarDatos();
            this.obtenerTipo();
        }
        if(c == KeyEvent.VK_ENTER) this.jTSerieFactura.requestFocus();
        
    }//GEN-LAST:event_JTMatriculaKeyPressed

    private void jBPagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPagarActionPerformed
        // TODO add your handling code here:
        //this.montoTotal();
        //this.cargarEncabezado();
        //int res = alta.hacerAlta(encp);
        if (this.jTable3.getRowCount()>24){
            JOptionPane.showMessageDialog(this,"Solo se pueden almacenar 24 meses en un documento de pago\nguarde y vuelva a hacer otro documento con los mismos datos de factura de demas si es necesario...","Atencion",JOptionPane.ERROR_MESSAGE);
        }else{
            int maxmeses = 0;        
            this.montoTotal();
            this.cargarEncabezado(maxmeses);
            int res = alta.hacerAlta(encp);
            if (res==0){
                maxmeses = this.insertarMesesAPagar(maxmeses);
            }else{
                JOptionPane.showMessageDialog(this,"No se pudo almacenar el encabezado de pago, revise los datos","Atencion",JOptionPane.ERROR_MESSAGE);
            }
            this.borrarGrilla2();
            this.bloquearInterfaz();
    //        this.jCheckBox1.setSelected(false);
            this.jBNuevo.setEnabled(true);
    //        this.jBImprimir.setEnabled(true);
            cantidad = 0;
        }        
    }//GEN-LAST:event_jBPagarActionPerformed

    private void jCAnioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCAnioKeyPressed
        char c = evt.getKeyChar();
        if(c == KeyEvent.VK_ENTER)this.jCMes.requestFocus();
    }//GEN-LAST:event_jCAnioKeyPressed

    private void jTAnioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTAnioActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jTAnioActionPerformed

    private void jTDiaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTDiaKeyPressed
         char c = evt.getKeyChar();
        if (!((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) ||(c == KeyEvent.VK_ENTER) ||(c == KeyEvent.VK_DELETE)  ||(c == KeyEvent.VK_ESCAPE))))
        {    
            getToolkit().beep();
            JOptionPane.showMessageDialog(null,"Debe introducir un valor valido ej: 12","Atencion",JOptionPane.ERROR_MESSAGE);
            this.jTDia.setText("");
            this.jTDia.requestFocus();
            evt.consume();
        }
        if(c == KeyEvent.VK_ENTER)this.jTMes.requestFocus();
        
    }//GEN-LAST:event_jTDiaKeyPressed

    private void jTMesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTMesKeyPressed
         char c = evt.getKeyChar();
        if (!((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) ||(c == KeyEvent.VK_ENTER) ||(c == KeyEvent.VK_DELETE)  ||(c == KeyEvent.VK_ESCAPE))))
        {    
            getToolkit().beep();
            JOptionPane.showMessageDialog(null,"Debe introducir un valor valido de mes ej: 12","Atencion",JOptionPane.ERROR_MESSAGE);
            this.jTMes.setText("");
            this.jTMes.requestFocus();
            evt.consume();
        }
        if(c == KeyEvent.VK_ENTER) this.jTAnio.requestFocus();
         
    }//GEN-LAST:event_jTMesKeyPressed

    private void jTAnioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTAnioKeyPressed
        char c = evt.getKeyChar();
        if (!((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) ||(c == KeyEvent.VK_ENTER) ||(c == KeyEvent.VK_DELETE)  ||(c == KeyEvent.VK_ESCAPE))))
        {    
            getToolkit().beep();
            JOptionPane.showMessageDialog(null,"Debe introducir un valor valido ej: 12","Atencion",JOptionPane.ERROR_MESSAGE);
            this.jTAnio.setText("");
            this.jTAnio.requestFocus();
            evt.consume();
        }
        if(c == KeyEvent.VK_ENTER) this.jCAnio.requestFocus();
        
    }//GEN-LAST:event_jTAnioKeyPressed

    private void jTSerieFacturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTSerieFacturaKeyPressed
         char c = evt.getKeyChar();
        if (!((Character.isDigit(c) || (c == KeyEvent.VK_ENTER) || (c == KeyEvent.VK_BACK_SPACE) ||(c == KeyEvent.VK_DELETE)  ||(c == KeyEvent.VK_ESCAPE))))
        {    
            getToolkit().beep();
            JOptionPane.showMessageDialog(null,"Debe introducir un valor valido ej: 12","Atencion",JOptionPane.ERROR_MESSAGE);
            this.jTSerieFactura.setText("");
            this.jTSerieFactura.requestFocus();
            evt.consume();
        }
        if(c == KeyEvent.VK_ENTER) this.jTNroFactura.requestFocus();
        
    }//GEN-LAST:event_jTSerieFacturaKeyPressed

    private void jTNroFacturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTNroFacturaKeyPressed
      char c = evt.getKeyChar();
       if (!((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_ENTER) ||(c == KeyEvent.VK_DELETE)  ||(c == KeyEvent.VK_ESCAPE))))
        {    
            getToolkit().beep();
            JOptionPane.showMessageDialog(null,"Debe introducir un valor valido ej: 12","Atencion",JOptionPane.ERROR_MESSAGE);
            this.jTNroFactura.setText("");
            this.jTNroFactura.requestFocus();
            evt.consume();
        }
       if(c == KeyEvent.VK_ENTER) this.jTDia.requestFocus();
       
    }//GEN-LAST:event_jTNroFacturaKeyPressed

    private void jTMontoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTMontoKeyPressed
       char c = evt.getKeyChar();
        if (!((Character.isDigit(c) || (c == KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_ENTER) ||(c == KeyEvent.VK_ENTER) ||(c == KeyEvent.VK_DELETE)  ||(c == KeyEvent.VK_ESCAPE) || (c == '.'))))
        {    
            getToolkit().beep();
            JOptionPane.showMessageDialog(null,"Debe introducir un valor valido ej: 12.50","Atencion",JOptionPane.ERROR_MESSAGE);
            this.jTMonto.setText("");
            this.jTMonto.requestFocus();
            evt.consume();
        }
        if(c == KeyEvent.VK_ENTER) this.jBPasar.requestFocus();
           
    }//GEN-LAST:event_jTMontoKeyPressed

    private void jBQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBQuitarActionPerformed
        if (this.jTable3.getSelectedRow()!=-1)
        {
            this.quitarLineaDetalle();
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una fila de la tabla...","Atencion", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jBQuitarActionPerformed

    private void jBNuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBNuevoMouseClicked
        
    }//GEN-LAST:event_jBNuevoMouseClicked

    private void jTDiaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTDiaKeyReleased
       
    }//GEN-LAST:event_jTDiaKeyReleased

    private void jTMesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTMesKeyReleased
       
    }//GEN-LAST:event_jTMesKeyReleased

    private void jTAnioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTAnioKeyReleased
       
    }//GEN-LAST:event_jTAnioKeyReleased

    private void jTDiaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTDiaFocusLost
       
    }//GEN-LAST:event_jTDiaFocusLost

    private void jTMesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTMesFocusLost
        
        
    }//GEN-LAST:event_jTMesFocusLost

    private void jTAnioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTAnioFocusLost
        
       
    }//GEN-LAST:event_jTAnioFocusLost

    private void jCMesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCMesKeyPressed
       char c = evt.getKeyChar();
       if(c == KeyEvent.VK_ENTER) this.jTMonto.requestFocus();
       
    }//GEN-LAST:event_jCMesKeyPressed

    private void jBPasarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBPasarKeyPressed
        
    }//GEN-LAST:event_jBPasarKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        UIHistorialPagos ventanaHistorial=new UIHistorialPagos(this,false,this.mat);
        ventanaHistorial.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        // TODO add your handling code here:
        this.obtenerTipo();
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
        this.obtenerTipo();
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        this.obtenerTipo();
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
        this.obtenerTipo();
    }//GEN-LAST:event_jRadioButton2ActionPerformed

private void jBPasarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPasarActionPerformed
//cuando presiono debe pasar el objeto detallepago a la grilla de abajo
        boolean resp = true;
        if(this.jTSerieFactura.getText().equals("") || this.jTDia.getText().equals("") || this.jTMes.getText().equals("") || this.jTAnio.getText().equals("") || this.jTMonto.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,"Debe completar todos los datos correctamente","Atencion",JOptionPane.ERROR_MESSAGE);
        }else{
            resp = this.controlFecha();
            if(resp){
                this.ponerElemento();            
            }
        }    
}//GEN-LAST:event_jBPasarActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new UICuotasMatriculado().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JTMatricula;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jBNuevo;
    private javax.swing.JButton jBPagar;
    private javax.swing.JButton jBPasar;
    private javax.swing.JButton jBQuitar;
    private javax.swing.JButton jBSalir;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jCAnio;
    private javax.swing.JComboBox jCMes;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField jTAnio;
    private javax.swing.JTextField jTApellido;
    private javax.swing.JTextField jTDia;
    private javax.swing.JTextField jTDni;
    private javax.swing.JTextField jTHabilitado;
    private javax.swing.JTextField jTMes;
    private javax.swing.JTextField jTMonto;
    private javax.swing.JTextField jTNombres;
    private javax.swing.JTextField jTNroFactura;
    private javax.swing.JTextField jTSerieFactura;
    private javax.swing.JTable jTable3;
    // End of variables declaration//GEN-END:variables
   
    CAlta alta = new CAlta();
    CListar listar = new CListar();
    Collection coleccionpagar = new ArrayList();
    Collection coleccionEnc = new ArrayList();
    CUltimo ultimo = new CUltimo();
    Matriculado mat = new Matriculado();
    Modificacion modificar = new Modificacion();
    EncabezadoPago encp = new EncabezadoPago();
    DetallePago detp = new DetallePago();
    Configuracion conf = new Configuracion();
    CFacturacion cfacturar = new CFacturacion();
    Producto producto = new Producto();
    int matricula = 0;
    int cantidad = 0;//guardo la cantidad de meses pagados insertados en la grilla
    double cuota = 0.0;
    int ultimoMes = 0;
    int insertar = 0;
    int meselegido = 0;
    long cantencabezado = 0;
    boolean guardoBien = false;
    int anio=0;
   
    GregorianCalendar fecha = new GregorianCalendar();
    Date hoy = new Date();
   
    String pagoMatricula="104";
    String inscripcion="101";
    String reinscripcion="102";
    String reinscripcion2vez="103";
    
    public boolean controlFecha()
    {
         int dia = Integer.parseInt(this.jTDia.getText().trim());
         int mes = Integer.parseInt(this.jTMes.getText().trim());
         int year = Integer.parseInt(this.jTAnio.getText().trim());
         boolean band = true;
         if(dia < 1 || dia >31)
         {
            getToolkit().beep();
            JOptionPane.showMessageDialog(null,"Debe introducir un valor valido ej: 12","Atencion",JOptionPane.ERROR_MESSAGE);
            this.jTDia.setText("");
            this.jTDia.requestFocus();
            band = false;
         }
        if(mes < 1  || mes > 12)
        {
            getToolkit().beep();
            JOptionPane.showMessageDialog(null,"Debe introducir un valor valido de Mes ej:10 ","Atencion",JOptionPane.ERROR_MESSAGE);
            this.jTMes.setText("");
            this.jTMes.requestFocus();
            band = false;
        }else{
             if (mes == 2)
             {
                if(this.calcularBisiesto(year) == 29)
                {
                    if(dia > 29)
                    {
                        JOptionPane.showMessageDialog(null,"Ha introducido un año Bisiesto por lo cual Febrero tiene 29 dìas ","Atencion",JOptionPane.ERROR_MESSAGE);
                        this.jTDia.setText("");
                        this.jTDia.requestFocus();
                        band = false;
                    }
                }else{
                    if(dia > 28){
                        JOptionPane.showMessageDialog(null,"Ha introducido un año que no es Bisiesto por lo cual Febrero tiene 28 dìas ","Atencion",JOptionPane.ERROR_MESSAGE);
                        this.jTDia.setText("");
                        this.jTDia.requestFocus();
                        band = false;
                    }
                }
            }
        }
        if(year < 1925  || year > anio)
        {
            getToolkit().beep();
            JOptionPane.showMessageDialog(null,"Debe introducir un valor valido de Año ej: desde 1930 hasta "+anio+" ","Atencion",JOptionPane.ERROR_MESSAGE);
            this.jTAnio.setText("");
            this.jTAnio.requestFocus();
            band = false;
        }  
      return band;   
    }
    
    private void cargarCombosFecha()
    {
        GregorianCalendar fec = new GregorianCalendar();
        anio = fec.get(Calendar.YEAR);
        for(int i=1930;i<=anio;i++)
        {
            this.jCAnio.addItem(String.valueOf(i));
        }
    }
           
    public void buscarMatriculado()
    {       
        matricula = Integer.parseInt(this.JTMatricula.getText().trim());
        mat.setMatricula(matricula);
        mat = listar.soloMatriculado(mat);
    }
    
    public void montoTotal()
    {
//       System.out.println("cuota cuando llega al calculo :"+cuota);
       cuota = 0;
       DefaultTableModel modelo = (DefaultTableModel)this.jTable3.getModel(); 
        for(int fila=0;fila<this.jTable3.getRowCount();fila++){
            cuota = cuota + Double.parseDouble(String.valueOf(this.jTable3.getValueAt(fila,2)).trim());
            if(fila == (this.jTable3.getRowCount()-1))
            {
                ultimoMes = Integer.parseInt(String.valueOf(this.jTable3.getValueAt(fila,1)).trim());
//                System.out.println("obtengo el ultimo mes:"+ultimoMes);
            }
        }
//       System.out.println("total de las cuotas :"+cuota);
    }
    
    public void mostrarDatos()
    {
        this.jTDni.setText(mat.getDni());
        this.jTApellido.setText(mat.getApellido());
        this.jTNombres.setText(mat.getNombres());
        this.jTHabilitado.setText(mat.getHabilitado());
        this.cargarIdEnc();
        this.obtenerConf();
    }
    
    public void cargarIdEnc()
    {
       encp.setIdmatriculado(mat.getMatricula()); 
       encp.setIdencabezado(ultimo.getUltimoTablaEnc(encp));
    }
    
    //cargo el encabezado correspondiente al matriculado
    public void cargarEncabezado(int maxmeses)
    {         
       encp.setIdmatriculado(mat.getIdmatriculado()); 
       encp.setIdencabezado(ultimo.getUltimoTablaEnc(encp));
       encp.setTotal(cuota);
       Date fecha2 = (new GregorianCalendar(Integer.parseInt(this.jTAnio.getText()),Integer.parseInt(this.jTMes.getText())-1,Integer.parseInt(this.jTDia.getText()))).getTime();
       encp.setFechapago(fecha2);
       int dia = 0;
//       System.out.println("ultimo mes :"+ultimoMes);
//       System.out.println("año de pago :"+String.valueOf(this.jTAnio.getText()));
       if(ultimoMes == 1)
       {
           dia = 28;
       }else{
           dia = 30;
       }
//       System.out.println("max meses en cargarenc :"+maxmeses);
       Date fecha3 = (new GregorianCalendar(Integer.parseInt(this.jTAnio.getText()),maxmeses-1,dia)).getTime();
       encp.setHabilitacionhasta(fecha3);
       encp.setSeriefactura(Long.parseLong(this.jTSerieFactura.getText()));
       encp.setNrofactura(Long.parseLong(this.jTNroFactura.getText()));
//       System.out.println("matricuala :"+mat.getMatricula());
       encp.setMatricula(Long.parseLong(String.valueOf(mat.getMatricula())));
    }
      
    public void obtenerConf(){
        conf = listar.hacerListado(conf);
    }
          
    public int insertarMesesAPagar(int maxmeses)
    {
        DefaultTableModel modelo = (DefaultTableModel)this.jTable3.getModel(); 
        for(int fila=0;fila<this.jTable3.getRowCount();fila++){
            maxmeses = this.guardarDetalle(fila,maxmeses);
            if (maxmeses == 0){
                guardoBien=false;                
                //MENSAJE
            }else{
                guardoBien=true;
        	//MENSAJE
            }
        }
        if (guardoBien){
            JOptionPane.showMessageDialog(this,"Se almaceno Correctamente...", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(this,"Hubo problemas en el almacenamiento, intente de nuevo...", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }
        
        
        return maxmeses;
    }
        
    private int guardarDetalle(int fil,int maxmeses){
         //Asigna a la collection de Detalles los valores
        DetallePago detalle=new DetallePago();            
        detalle.setIdencabezadopago(encp.getIdencabezado());
        detalle.setAnio(Integer.parseInt(String.valueOf(this.jTable3.getValueAt(fil,0)).trim()));
        detalle.setMes(Integer.parseInt(String.valueOf(this.jTable3.getValueAt(fil,1)).trim()));
        if(detalle.getMes()>= maxmeses) maxmeses = detalle.getMes();
//        System.out.println("mes maximo :"+maxmeses);
        cuota = Double.parseDouble(String.valueOf(this.jTable3.getValueAt(fil,2)).trim());
        detalle.setImporte(Double.parseDouble(String.valueOf(this.jTable3.getValueAt(fil,2)).trim()));
        
        
        detalle.setIdproducto(Long.parseLong(String.valueOf(this.jTable3.getValueAt(fil,3)).trim()));//codigo correspondiente a pago de matricula
        
        //---------------------------------------------
        //PROVISORIO!!!!, La forma correcta seria:
        //leer la tabla configuraciones el codigo correspondiente
        //a REINSCRIPCION, ahora estoy haciendo la asignacion manualmente
//        if (this.jCheckBox1.isSelected()){
//            detalle.setIdproducto(102);//codigo correspondiente a reinscripcion
//        }else{
//            detalle.setIdproducto(conf.getIdproducto());//codigo correspondiente a pago de matricula
//        }
        //---------------------------------------------
        
        int respuesta = alta.hacerAlta(detalle);
        //return respuesta;
        return maxmeses;
    }    
     
    public void actualizarEnc()
    {
       encp.setTotal(producto.getPrecio() * insertar); 
       Date fecha2 = (new GregorianCalendar(Integer.parseInt(this.jTAnio.getText()),Integer.parseInt(this.jTMes.getText()),Integer.parseInt(this.jTDia.getText()))).getTime();
       encp.setFechapago(fecha2);
       encp.setHabilitacionhasta(hoy);
       encp.setSeriefactura(Long.parseLong(this.jTSerieFactura.getText()));
       encp.setNrofactura(Long.parseLong(this.jTNroFactura.getText()));
       int resp = modificar.modificar(encp);
      
    }
         
    public void borrarGrilla2()
    {
        DefaultTableModel modelo = (DefaultTableModel)this.jTable3.getModel();
        while(this.jTable3.getRowCount() != 0)
                modelo.removeRow(0);
    }
   
    public void ponerElemento()
    {
        DetallePago dpAlmacenar = new DetallePago();
        dpAlmacenar.setIdencabezadopago(encp.getIdencabezado());
        dpAlmacenar.setAnio(Integer.parseInt(String.valueOf(this.jCAnio.getSelectedItem())));
        dpAlmacenar.setMes(Integer.parseInt(String.valueOf(this.jCMes.getSelectedIndex()+1)));
        dpAlmacenar.setImporte(Double.parseDouble(this.jTMonto.getText()));
        
        dpAlmacenar.setIdproducto(Long.parseLong(this.obtenerTipo()));       
        
        this.actualizarGrillaPagar(dpAlmacenar);
        
        
    }
    
    public void actualizarGrillaPagar(DetallePago dp)
    {        
        String datos[]= new String[4];
        //NumberFormat nf = NumberFormat.getCurrencyInstance();
        DefaultTableModel modelo = (DefaultTableModel)this.jTable3.getModel();             
        datos[0] = String.valueOf(dp.getAnio());
        datos[1] = String.valueOf(dp.getMes());
        datos[2] = String.valueOf(dp.getImporte());
        datos[3] = String.valueOf(dp.getIdproducto());
        modelo.addRow(datos);
    }
    
    private void quitarLineaDetalle()
    {
        DefaultTableModel  modelo=new DefaultTableModel();
        modelo=(DefaultTableModel) this.jTable3.getModel();       
        modelo.removeRow(this.jTable3.getSelectedRow());    
        if(this.jTable3.getRowCount() == 0)
            this.agregarLineaDetalle();
    }
    
    private void agregarLineaDetalle(){
        DefaultTableModel  modelo=new DefaultTableModel();
        modelo=(DefaultTableModel) this.jTable3.getModel();
        String datos[]=new String[3];
        datos[0]="";
        datos[1]="";
        datos[2]="";
        modelo.addRow(datos);    
    }
    
  private void bloquearInterfaz()
  {
      this.JTMatricula.setEnabled(false);
      this.jButton1.setEnabled(false);
      this.jTSerieFactura.setEnabled(false);
      this.jTNroFactura.setEnabled(false);
      this.jTDia.setEnabled(false);
      this.jTMes.setEnabled(false);
      this.jTAnio.setEnabled(false);
      this.jCAnio.setEnabled(false);
      this.jCMes.setEnabled(false);
      this.jTMonto.setEnabled(false);
      this.jTable3.setEnabled(false);
      this.jBQuitar.setEnabled(false);
      this.jBPagar.setEnabled(false);
      
  }
   
   private void habilitarPantalla()
  {
      this.JTMatricula.setEnabled(true);
      this.jButton1.setEnabled(true);
      this.jTSerieFactura.setEnabled(true);
      this.jTNroFactura.setEnabled(true);
      this.jTDia.setEnabled(true);
      this.jTMes.setEnabled(true);
      this.jTAnio.setEnabled(true);
      this.jCAnio.setEnabled(true);
      this.jCMes.setEnabled(true);
      this.jTMonto.setEnabled(true);
      this.jTable3.setEnabled(true);
      this.jBQuitar.setEnabled(true);
      this.jBPagar.setEnabled(true);
      //this.limpiarDatos();
//      this.jBImprimir.setEnabled(false);
      this.jBNuevo.setEnabled(false);
  }
   
  private void limpiarDatos() 
  {
      this.JTMatricula.setText("");
      this.jTDni.setText("");
      this.jTApellido.setText("");
      this.jTNombres.setText("");
      this.jTHabilitado.setText("");
      this.jTSerieFactura.setText("");
      this.jTNroFactura.setText("");
      this.jTDia.setText("");
      this.jTMes.setText("");
      this.jTAnio.setText("");
      this.jCMes.setSelectedIndex(0);
      this.jCAnio.setSelectedIndex(0);
      this.jTMonto.setText("");
      cuota = 0;
  }
  
  private void limpiarDatos2() 
  {
      this.jTSerieFactura.setText("");
      this.jTNroFactura.setText("");
      this.jTDia.setText("");
      this.jTMes.setText("");
      this.jTAnio.setText("");
      this.jCMes.setSelectedIndex(0);
      this.jCAnio.setSelectedIndex(0);
      this.jTMonto.setText("");
      cuota = 0;
  }
  
  public int calcularBisiesto(int ano)
    {
      int resp = 0;
      if ((( ano % 4 == 0 ) && ( ano % 100 != 0 )) || ( ano % 400 == 0 ))
        resp = 29;
      else 
        resp = 28;
      return resp;  
    }   
   private String obtenerTipo()
 {
     String resp = "";
     if(this.jRadioButton1.isSelected()) resp=this.pagoMatricula;
     if(this.jRadioButton2.isSelected()) resp=this.inscripcion;
     if(this.jRadioButton3.isSelected()) resp=this.reinscripcion;
     if(this.jRadioButton4.isSelected()) resp=this.reinscripcion2vez;
     return resp;
 }
}
